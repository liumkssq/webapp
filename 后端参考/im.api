syntax = "v1"

// IM 消息服务定义
info (
    title:  "im消息服务"
    author: "liumkssq"
)

// ------- domain.api --------------------
type (
    // 聊天记录
    ChatLog {
        Id             string `json:"id,omitempty"`             // 消息唯一标识
        ConversationId string `json:"conversationId,omitempty"` // 会话 ID
        SendId         string `json:"sendId,omitempty"`         // 发送者 ID
        RecvId         string `json:"recvId,omitempty"`         // 接收者 ID
        MsgType        int32  `json:"msgType,omitempty"`       // 消息类型
        MsgContent     string `json:"msgContent,omitempty"`   // 消息内容
        ChatType       int32  `json:"chatType,omitempty"`     // 聊天类型（单聊/群聊）
        SendTime       int64  `json:"SendTime,omitempty"`     // 发送时间
    }

        // 会话信息
    Conversation {
        ConversationId string `json:"conversationId,omitempty"` // 会话 ID
        ChatType       int32  `json:"ChatType,omitempty"`       // 聊天类型（单聊/群聊）
        TargetId       string `json:"targetId,omitempty"`       // 目标用户/群 ID
        IsShow         bool   `json:"isShow,omitempty"`         // 是否显示该会话
        Seq            int64  `json:"seq,omitempty"`           // 消息序列号
        Read           int32  `json:"read,omitempty"`          // 已读消息数
        Total          int32  `json:"total,omitempty"`         // 总消息数
        Unread         int32  `json:"unread,omitempty"`       // 未读消息数
    }
)

// -------------- im api v1 --------------
type (
    // 聊天记录请求
    ChatLogReq {
        ConversationId string `json:"conversationId"`         // 会话 ID
        StartSendTime  int64  `json:"startSendTime,omitempty"` // 起始发送时间
        EndSendTime    int64  `json:"endSendTime,omitempty"`   // 结束发送时间
        Count          int64  `json:"count,omitempty"`         // 获取的消息数量
    }

        // 聊天记录响应
    ChatLogResp {
        List []*ChatLog `json:"list"` // 聊天记录列表
    }

        // 获取会话请求
    GetConversationsReq {}

        // 获取会话响应
    GetConversationsResp {
        UserId           string                   `json:"userId"`            // 用户 ID
        ConversationList map[string]*Conversation `json:"conversationList"` // 会话列表
    }

        // 更新会话请求
    PutConversationsReq {
        ConversationList map[string]*Conversation `json:"conversationList"` // 更新的会话列表
    }

        // 更新会话响应
    PutConversationsResp {}

        // 建立用户会话请求
    SetUpUserConversationReq {
        SendId   string `json:"sendId,omitempty"`   // 发送者 ID
        RecvId   string `json:"recvId,omitempty"`   // 接收者 ID
        ChatType int32  `json:"ChatType,omitempty"` // 聊天类型（单聊/群聊）
    }

        // 建立用户会话响应
    setUpUserConversationResp {}
)

